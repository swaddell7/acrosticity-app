{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stefaniwaddell/Development/code/acrosticity-app/src/App.js\";\nimport './App.css';\nimport Letter from './Letter';\nimport AddLetterButton from './AddLetterButton';\nimport RemoveLetterButton from './RemoveLetterButton';\nimport GenerateButton from './GenerateButton'; //pass down props on add letter button for function to add new letter\n//add state to app class; set letter to 1; write functions to update state for both add and remove letter\n//pass down functions as props on add and remove letter components? or maybe this can all be done in app.js\n//use state to loop through and update how many letter components are displayed on the app\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: \"ACROSTICITY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Letter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddLetterButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RemoveLetterButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GenerateButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/stefaniwaddell/Development/code/acrosticity-app/src/App.js"],"names":["Letter","AddLetterButton","RemoveLetterButton","GenerateButton","App","Component","render"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CAGA;AACA;AACA;AACA;;AAEA,MAAMC,GAAN,SAAkBC,SAAlB,CAA4B;AAG1BC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAbyB;;AAgB5B,eAAeF,GAAf","sourcesContent":["import './App.css';\nimport Letter from './Letter';\nimport AddLetterButton from './AddLetterButton';\nimport RemoveLetterButton from './RemoveLetterButton';\nimport GenerateButton from './GenerateButton';\n\n\n//pass down props on add letter button for function to add new letter\n//add state to app class; set letter to 1; write functions to update state for both add and remove letter\n//pass down functions as props on add and remove letter components? or maybe this can all be done in app.js\n//use state to loop through and update how many letter components are displayed on the app\n\nclass App extends Component {\n\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">ACROSTICITY</header>\n        <Letter />\n        <AddLetterButton />\n        <RemoveLetterButton />\n        <GenerateButton />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}